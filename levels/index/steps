title = Adding changes step by step
cards = add reset-file commit

[description]

인덱스는 각 커밋에 포함할 변경 사항을 정확하게 지정할 수 있어 매우 유용합니다!

[setup]

echo "A hammer, balancing on its handle." > hammer
echo "A bottle, containing a clear liquid." > bottle
echo "A white sugar cube." > sugar_cube

git add .
git commit -m "The beginning"

[win]

# 모든 세 개의 객체에 변경 사항을 추가하여 논리적인 일련의 이벤트를 만드세요!
test "$(git diff --name-only | wc -l)" -eq 3 || file -f .git/candle-changed && touch .git/candle-changed

# 이러한 변경 사항 중 하나만 추가하세요!
test "$(git diff --cached --name-only | wc -l)" -eq 1 || file -f .git/candle-added && touch .git/candle-added

# 그리고 커밋을 만드세요.
COUNT=0
for commit in $(git cat-file --batch-check='%(objectname) %(objecttype)' --batch-all-objects | grep 'commit$' | cut -f1 -d' '); do
    if test "$(git diff --name-only $commit $commit^ | wc -l)" -eq 1; then
        COUNT=$((COUNT+1))
    fi
done

test "$COUNT" -ge 1

# 단일 변경 사항만 기록하는 두 번째 커밋을 만드세요.
COUNT=0
for commit in $(git cat-file --batch-check='%(objectname) %(objecttype)' --batch-all-objects | grep 'commit$' | cut -f1 -d' '); do
    if test "$(git diff --name-only $commit $commit^ | wc -l)" -eq 1; then
        COUNT=$((COUNT+1))
    fi
done

test "$COUNT" -ge 2

# 그리고 세 번째 것을 만드세요.
COUNT=0
for commit in $(git cat-file --batch-check='%(objectname) %(objecttype)' --batch-all-objects | grep 'commit$' | cut -f1 -d' '); do
    if test "$(git diff --name-only $commit $commit^ | wc -l)" -eq 1; then
        COUNT=$((COUNT+1))
    fi
done

test "$COUNT" -ge 3