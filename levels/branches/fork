title = Make parallel commits
cards = checkout commit-auto

[description]

평행 타임라인을 만드는 것이 완전히 합법적이고 안전하다는 것을 알고 계셨나요? 사실입니다!

이 동물원에서 문제가 언제 발생했는지 찾아보실 수 있나요? 그런 다음 마지막으로 좋았던 커밋으로 돌아가서 모두가 행복한 평행 우주를 만들어보세요!

[cli]

The blue animal represents a concept known as the "HEAD pointer" in Git: It shows you which commit is the current one.

Here's a cool trick to go to the previous commit: 

    git checkout HEAD^

You can also go back two commits by typing, for example: 

    git checkout HEAD~2

[setup]

mkdir cage
echo "Looks very hungry." > cage/lion

echo "A small child.
It really loves cats!" > child
git add .
git commit -m "The beginning"

echo "It's holding a lollipop." >> child
git commit -am "The child buys something"

mv child cage
git add .
git commit -m "The child climbs somewhere"

git rm cage/child
echo "Looks happy. :)" > cage/lion
git add .
git commit -m "Oh no"

echo "It's sleeping." > cage/lion
git add .
git commit -m "Nap time!"

git checkout --detach
git branch -d main

[win]

# Make sure that the child is happy.
# 아이가 행복한지 확인하세요.
git ls-tree --name-only -r HEAD | grep child

# Make sure that the lion gets something to eat.
# 사자가 먹을 것을 얻는지 확인하세요.
git show HEAD:cage/lion | grep -v "very hungry"

[congrats]

휴, 잘했어요! 이 결과가 훨씬 더 나아 보이네요.

원하시면 더 많은 평행 타임라인을 추가하거나 더 길게 만들 수 있습니다.

준비가 되시면, 다음 임무가 이미 기다리고 있습니다...